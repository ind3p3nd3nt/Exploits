Universal Browser 'DNS Shown in HTTP' System-wide DoH bypass by Social Engineering Neo.


Affected Platforms: -
Android
Apple iOS
Windows
Linux
MacOS


Tested On: -
Firefox Focus - Android & iOS
Firefox ESR - Linux
Firefox Browser - Windows & MacOS
Google Chrome - All OS
MS Edge - Windows


Summary: -
Users Accessing any Website with DNS-Over-HTTPS Enabled Through Device and Browser Settings are Vulnerable to a Web Activity Leakage Through HTTP Requests from Multiple Web Browsers.


Short Description: -
A user with Firefox Focus and previously configured 'Private DNS' (system-wide DNS-Over-HTTPS from android 9+)
User accesses a remote website, upon network inspection DNS requests are fully encrypted.
Though a single HTTP request leaks the DNS site name `http.host`.


Long Description: -
If the user simply enters 'test.com' into the address bar, the browser does not know what protocol to search for. Defaulting to HTTP, disclosing the requested DNS hostname as variable 'host', even though user has DoH enabled.
If the user enters 'https://test.com' into the address bar, the HTTP request is not sent. This is due to the user inputting the HTTPS protocol into the beginning of the URL.
This does not matter whether the remote site supports HTTPS/HSTS, the initial search request from the address bar will be HTTP. This is because the protocol is not set, disclosing the requested site.
Rendering DNS-Over-HTTPS somewhat useless for sites searched from the address bar, unless the user installs the 'HTTPS Everywhere' add-on or specifying protocols every time direct browsing sites.
This vulnerability only affects users direct browsing URLs without inserting protocols combined with either URL autocomplete, or browser history disabled (private mode).


Proof of Concept: -
=====
ANDROID: -
Step 0.)    To set DNS-Over-HTTPS on Android 9 and above, navigate to Settings / Connections / More Connection Settings / Private DNS and set the value as '1dot1dot1dot1.cloudflare-dns.com'
Step 0.1)   On a rooted device, install 'tcpdump' and run `tcpdump -i eth0 -w http_sniff.pcap port http`
Step 0.2)   Otherwise configure traffic to forward through a device within your network to inspect the Android traffic.

Step 1.)    Open Firefox Focus for Android.
Step 1.1.)  In the Address bar, enter 'duckduckgo.com' and search.

Step 2.)    Now, from either tcpdump or the capture device on your network, you will see an HTTP request:
`32054 3163.520   HTTP    192.168.0.130  ->13.55.4.72     
GET / HTTP/1.1  Host: duckduckgo.com  User-Agent: Mozilla/5.0 (Android 9; Mobile; rv:71.0) Gecko/71. [309b]`

Step 2.1.)  Repeat from step 1 in another web browser.


iOS: -
Step 0.)    To set DNS-Over-HTTPS on iOS devices download DNSCloak from the AppStore. Scroll down to "Cloudflare" and select "use this server".
Step 0.1.)  On a jailbroken device, install 'tcpdump' and run `tcpdump -i en0 port http -w http_sniff.pcap`
Step 0.2.)  Otherwise configure traffic to forward through a device within your network to inspect the iOS traffic.     

Step 1.)    Open Firefox Focus for iOS.
Step 1.1.)  In the Address bar, enter 'duckduckgo.com' and search.

Step 2.)    Now, from either tcpdump or the capture device on your network, you will see an HTTP request (Wireshark):
`Hypertext Transfer Protocol
    GET / HTTP/1.1\r\n
    Host: duckduckgo.com\r\n
    Upgrade-Insecure-Requests: 1\r\n
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n
    User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/8.1.3 Mobile/15E148 Safari/605.1.15\r\n
    Accept-Language: en-us\r\n
    Accept-Encoding: gzip, deflate\r\n
    Connection: keep-alive\r\n
    \r\n
    [Full request URI: http://duckduckgo.com/]
    [HTTP request 1/1]
    [Response in frame: 6]`


DESKTOP: -
Step 0.)    To set DNS-Over-HTTPS on Windows devices download DnsCrypt. Follow https://developers.cloudflare.com/1.1.1.1/dns-over-https/cloudflared-proxy on installation/configuration.
Step 0.1.)  Install Wireshark, start a capture on Wi-Fi/Ethernet interface.
Step 0.2.)  Otherwise configure traffic to forward through a device within your network to inspect the desktop traffic.     

Step 1.)    Open Private Firefox/Chrome Window.
Step 1.1.)  In the Address bar, enter 'duckduckgo.com' and search.

Step 2.)    Now, from the Wireshark output or the capture device on your network, you will see an HTTP request (Wireshark):
`Hypertext Transfer Protocol
    GET / HTTP/1.1\r\n
    Host: duckduckgo.com\r\n
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0\r\n
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n
    Accept-Language: en-us \r\n
    Accept-Encoding: gzip, deflate\r\n
    DNT: 1\r\n
    Connection: keep-alive\r\n
    Upgrade-Insecure-Requests: 1\r\n
    \r\n
    [Full request URI: http://duckduckgo.com/]
    [HTTP request 1/1]
    [Response in frame: 24]`

[SUCCESSFUL DOH BYPASS]

VIDEO: -   https://youtu.be/kZIU3T90g7E
=====


Expected Result: -
Devices with DNS-Over-HTTPS enabled system-wide should not disclose requested DNS hostnames.


Observed Result: -
Current site hostname disclosed through plain-text HTTP request sent to remote host by most web browsers.
